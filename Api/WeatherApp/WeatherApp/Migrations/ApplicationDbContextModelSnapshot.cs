// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApp.DbContexts;

namespace WeatherApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherApp.Models.Coord", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("lat")
                        .HasColumnType("decimal(7,4)");

                    b.Property<decimal>("lon")
                        .HasColumnType("decimal(7,4)");

                    b.Property<int>("placeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("placeId");

                    b.ToTable("coord");

                    b.HasData(
                        new
                        {
                            id = 1,
                            lat = 101.1m,
                            lon = 104.2m,
                            placeId = 1
                        },
                        new
                        {
                            id = 2,
                            lat = 210.1m,
                            lon = 10.2m,
                            placeId = 2
                        },
                        new
                        {
                            id = 3,
                            lat = 102.1m,
                            lon = 10.22m,
                            placeId = 3
                        },
                        new
                        {
                            id = 4,
                            lat = 102.1m,
                            lon = 102.2m,
                            placeId = 4
                        },
                        new
                        {
                            id = 5,
                            lat = 110.1m,
                            lon = 110.2m,
                            placeId = 5
                        },
                        new
                        {
                            id = 6,
                            lat = 10.12m,
                            lon = 141.2m,
                            placeId = 6
                        },
                        new
                        {
                            id = 7,
                            lat = 10.1m,
                            lon = 14.2m,
                            placeId = 7
                        },
                        new
                        {
                            id = 8,
                            lat = 12.1m,
                            lon = 10.2m,
                            placeId = 8
                        },
                        new
                        {
                            id = 9,
                            lat = 11.1m,
                            lon = 11.2m,
                            placeId = 9
                        },
                        new
                        {
                            id = 10,
                            lat = 10.1m,
                            lon = 10.2m,
                            placeId = 10
                        });
                });

            modelBuilder.Entity("WeatherApp.Models.Main", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("feels_like")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("humidity")
                        .HasColumnType("int");

                    b.Property<int>("placeId")
                        .HasColumnType("int");

                    b.Property<int>("pressure")
                        .HasColumnType("int");

                    b.Property<decimal>("temp")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("temp_max")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("temp_min")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("id");

                    b.HasIndex("placeId")
                        .IsUnique();

                    b.ToTable("main");

                    b.HasData(
                        new
                        {
                            id = 1,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 1,
                            pressure = 101,
                            temp = 22.22m,
                            temp_max = 23.1m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 2,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 2,
                            pressure = 101,
                            temp = 22.22m,
                            temp_max = 232.11m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 3,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 3,
                            pressure = 1,
                            temp = 2.22m,
                            temp_max = 132.11m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 4,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 4,
                            pressure = 11,
                            temp = 22.23m,
                            temp_max = 232.11m,
                            temp_min = 20.1m
                        },
                        new
                        {
                            id = 5,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 5,
                            pressure = 101,
                            temp = 21.22m,
                            temp_max = 32.11m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 6,
                            feels_like = 0m,
                            humidity = 51,
                            placeId = 6,
                            pressure = 23,
                            temp = 22.22m,
                            temp_max = 232.11m,
                            temp_min = 22m
                        },
                        new
                        {
                            id = 7,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 7,
                            pressure = 1,
                            temp = 2m,
                            temp_max = 232.11m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 8,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 8,
                            pressure = 101,
                            temp = 22.22m,
                            temp_max = 34.11m,
                            temp_min = 2m
                        },
                        new
                        {
                            id = 9,
                            feels_like = 0m,
                            humidity = 77,
                            placeId = 9,
                            pressure = 10,
                            temp = 22.22m,
                            temp_max = 232.11m,
                            temp_min = 20m
                        },
                        new
                        {
                            id = 10,
                            feels_like = 0m,
                            humidity = 55,
                            placeId = 10,
                            pressure = 101,
                            temp = 22.22m,
                            temp_max = 232.11m,
                            temp_min = 20m
                        });
                });

            modelBuilder.Entity("WeatherApp.Models.Place", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("weatherId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("weatherId");

                    b.ToTable("place");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Erfurt",
                            weatherId = 2
                        },
                        new
                        {
                            id = 2,
                            name = "Essen",
                            weatherId = 1
                        },
                        new
                        {
                            id = 3,
                            name = "Eisenach",
                            weatherId = 2
                        },
                        new
                        {
                            id = 4,
                            name = "Stotternheim",
                            weatherId = 5
                        },
                        new
                        {
                            id = 5,
                            name = "Ibiza",
                            weatherId = 5
                        },
                        new
                        {
                            id = 6,
                            name = "Hanoi",
                            weatherId = 4
                        },
                        new
                        {
                            id = 7,
                            name = "New York",
                            weatherId = 1
                        },
                        new
                        {
                            id = 8,
                            name = "Ort",
                            weatherId = 3
                        },
                        new
                        {
                            id = 9,
                            name = "noch ein Ort",
                            weatherId = 2
                        },
                        new
                        {
                            id = 10,
                            name = "irgendwo",
                            weatherId = 1
                        });
                });

            modelBuilder.Entity("WeatherApp.Models.Weather", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("icon")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("main")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("weather");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "broken clouds",
                            icon = "02",
                            main = "Snow"
                        },
                        new
                        {
                            id = 2,
                            description = "broken clouds",
                            icon = "01",
                            main = "Clouds"
                        },
                        new
                        {
                            id = 3,
                            description = "broken clouds",
                            icon = "02",
                            main = "Clouds"
                        },
                        new
                        {
                            id = 4,
                            description = "broken clouds",
                            icon = "03",
                            main = "Snow"
                        },
                        new
                        {
                            id = 5,
                            description = "broken clouds",
                            icon = "02",
                            main = "Rain"
                        },
                        new
                        {
                            id = 6,
                            description = "broken clouds",
                            icon = "01",
                            main = "Clouds"
                        },
                        new
                        {
                            id = 7,
                            description = "broken clouds",
                            icon = "04",
                            main = "Rain"
                        },
                        new
                        {
                            id = 8,
                            description = "broken clouds",
                            icon = "03",
                            main = "Sun"
                        },
                        new
                        {
                            id = 9,
                            description = "broken clouds",
                            icon = "02",
                            main = "Clouds"
                        },
                        new
                        {
                            id = 10,
                            description = "broken clouds",
                            icon = "01",
                            main = "Clouds"
                        });
                });

            modelBuilder.Entity("WeatherApp.Models.Wind", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("deg")
                        .HasColumnType("int");

                    b.Property<int>("placeId")
                        .HasColumnType("int");

                    b.Property<decimal>("speed")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("id");

                    b.HasIndex("placeId")
                        .IsUnique();

                    b.ToTable("wind");

                    b.HasData(
                        new
                        {
                            id = 1,
                            deg = 1,
                            placeId = 1,
                            speed = 10m
                        },
                        new
                        {
                            id = 2,
                            deg = 11,
                            placeId = 2,
                            speed = 101m
                        },
                        new
                        {
                            id = 3,
                            deg = 23,
                            placeId = 3,
                            speed = 121m
                        },
                        new
                        {
                            id = 4,
                            deg = 43,
                            placeId = 4,
                            speed = 131m
                        },
                        new
                        {
                            id = 5,
                            deg = 63,
                            placeId = 5,
                            speed = 111m
                        },
                        new
                        {
                            id = 6,
                            deg = 73,
                            placeId = 6,
                            speed = 11m
                        },
                        new
                        {
                            id = 7,
                            deg = 89,
                            placeId = 7,
                            speed = 2m
                        },
                        new
                        {
                            id = 8,
                            deg = 43,
                            placeId = 8,
                            speed = 31m
                        },
                        new
                        {
                            id = 9,
                            deg = 4,
                            placeId = 9,
                            speed = 131m
                        },
                        new
                        {
                            id = 10,
                            deg = 3,
                            placeId = 10,
                            speed = 31m
                        });
                });

            modelBuilder.Entity("WeatherApp.Models.Coord", b =>
                {
                    b.HasOne("WeatherApp.Models.Place", "place")
                        .WithMany("coords")
                        .HasForeignKey("placeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("place");
                });

            modelBuilder.Entity("WeatherApp.Models.Main", b =>
                {
                    b.HasOne("WeatherApp.Models.Place", "place")
                        .WithOne("main")
                        .HasForeignKey("WeatherApp.Models.Main", "placeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("place");
                });

            modelBuilder.Entity("WeatherApp.Models.Place", b =>
                {
                    b.HasOne("WeatherApp.Models.Weather", "weather")
                        .WithMany("place")
                        .HasForeignKey("weatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("weather");
                });

            modelBuilder.Entity("WeatherApp.Models.Wind", b =>
                {
                    b.HasOne("WeatherApp.Models.Place", "place")
                        .WithOne("wind")
                        .HasForeignKey("WeatherApp.Models.Wind", "placeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("place");
                });

            modelBuilder.Entity("WeatherApp.Models.Place", b =>
                {
                    b.Navigation("coords");

                    b.Navigation("main");

                    b.Navigation("wind");
                });

            modelBuilder.Entity("WeatherApp.Models.Weather", b =>
                {
                    b.Navigation("place");
                });
#pragma warning restore 612, 618
        }
    }
}
